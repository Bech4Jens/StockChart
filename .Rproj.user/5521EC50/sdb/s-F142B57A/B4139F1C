{
    "contents" : "#Loads the necessary libraries for the program\nlibrary('shiny')\nlibrary('devtools')\nlibrary('quantmod')\nlibrary('ggplot2')\nlibrary('shinyapps')\nlibrary('reshape2')\n\n#------------------------------------- Shiny App Server Starts Here ----------------------------------------#\n\nshinyServer(function(input, output) {\n  \n  #Code to load data for the first stock\n  dataInput1 <- reactive({\n    getSymbols(input$symb1, src = \"yahoo\", \n               from = input$dates[1],\n               to = input$dates[2],\n               auto.assign = FALSE)\n    \n  })\n  \n  #Code to load data for the second stock\n  dataInput2 <- reactive({\n    getSymbols(input$symb2, src = \"yahoo\", \n               from = input$dates[1],\n               to = input$dates[2],\n               auto.assign = FALSE)\n    \n  })\n  \n  #Code to load data for the third stock\n  dataInput3 <- reactive({\n    getSymbols(input$symb3, src = \"yahoo\", \n               from = input$dates[1],\n               to = input$dates[2],\n               auto.assign = FALSE)\n    \n  })\n  \n  \n  #Output for the first tap\n  output$plot1 <- renderPlot({    \n    chartSeries(dataInput1(), name = input$symb1, theme = chartTheme(\"white\"), \n                type = input$ChartType)\n  })\n  \n  #Output for the second tap\n  output$plot2 <- renderPlot({    \n    chartSeries(dataInput2(), name = input$symb2, theme = chartTheme(\"white\"), \n                type = input$ChartType)\n  })\n  \n  #Output for the third tap\n  output$plot3 <- renderPlot({    \n    chartSeries(dataInput3(), name = input$symb3, theme = chartTheme(\"white\"), \n                type = input$ChartType)\n  })\n  \n  #Output for the comparison tap\n  output$plot4 <- renderPlot({\n    \n    #Compiles the necessary data for the stock comparison\n    Comp1 <-  data.frame(date = index(dataInput1()), dataInput1(), row.names=NULL)[,c(1,7)]    \n    Comp2 <-  data.frame(date = index(dataInput2()), dataInput2(), row.names=NULL)[,c(1,7)]\n    Comp3 <-  data.frame(date = index(dataInput3()), dataInput3(), row.names=NULL)[,c(1,7)]\n    CompFinal <-  merge(merge(Comp1, Comp2, by=1), Comp3, by=1)\n    CompFinal[,2] <- (CompFinal[,2]/CompFinal[1,2])*100\n    CompFinal[,3] <- (CompFinal[,3]/CompFinal[1,3])*100\n    CompFinal[,4] <- (CompFinal[,4]/CompFinal[1,4])*100\n    CompFinal <-  melt(CompFinal, id.vars=\"date\")\n    \n    #COnstructs the ggplot with the three stock prices to be compared\n    p <- ggplot(CompFinal, aes(x=date, y=value, color=variable,)) + geom_line() + \n      ggtitle(\"Comparison of Total Returns\") + ylab(\"Total Return Index (base=100)\") + xlab(\"Date\")\n    print(p)\n  })\n  \n})",
    "created" : 1411023712461.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3191237010",
    "id" : "B4139F1C",
    "lastKnownWriteTime" : 1411208224,
    "path" : "C:/Users/Jens/Dropbox/Documents/Coursera/Data Science Track/Developing data products/StockChart/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}