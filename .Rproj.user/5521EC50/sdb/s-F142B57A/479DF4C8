{
    "contents" : "\n\ngetSymbols(\"SPY\",src=\"yahoo\")\ntest1 <- data.frame(date = index(SPY), SPY, row.names=NULL)\ntest1 <- test1[,c(1,7)]\n\ngetSymbols(\"AAPL\",src=\"yahoo\")\ntest2 <- data.frame(date = index(AAPL), AAPL, row.names=NULL)\ntest2 <- test2[,c(1,7)]\n\ngetSymbols(\"AGNC\",src=\"yahoo\")\ntest3 <- data.frame(date = index(AGNC), AGNC, row.names=NULL)\ntest3 <- test3[,c(1,7)]\n\ntestFinal <- merge(test1, test2, by=1)\ntestFinal <- merge(testFinal, test3, by=1)\ntestFinal[,2] <- (testFinal[,2]/testFinal[1,2])*100\ntestFinal[,3] <- (testFinal[,3]/testFinal[1,3])*100\ntestFinal[,4] <- (testFinal[,4]/testFinal[1,4])*100\n\nplot(testFinal[,1], testFinal[,2], type=\"l\", col=1, \n     ylim=range(min(testFinal[,2:4]),max(testFinal[,2:4])), xlab=\"Date\", \n     ylab=\"Normalized Stock Price\", main=\"Comparison of Normalized Stock Prices\")\nlines(testFinal[,1], testFinal[,3], col=2)\nlines(testFinal[,1], testFinal[,4], col=3)\nlegend(min(testFinal[,1]), max(testFinal[,2:4]), c(\"SPY - Black\", \"AAPL  - Red\", \"AGNC - Green\"), \n       col=c(\"black\", \"red\", \"green\"))\n\n\nggplot(testFinal, aes(testFinal[,1])) + \n  geom_line(aes(y = testFinal[,2]), color=\"black\") + \n  geom_line(aes(y = testFinal[,3]), color=\"darkgrey\") +\n  geom_line(aes(y = testFinal[,4]), color=\"darkblue\") +\n  ylab(\"Normalized Price\") + xlab(\"Date\") + scale_colour_manual(\"\", \n                                                                breaks = c(\"TempMax\", \"TempMedia\", \"TempMin\"),\n                                                                values = c(\"red\", \"green\", \"blue\"))\n\n#------------------------\ntesting <- melt(testFinal, id.vars=\"date\")\n\nggplot(testing, aes(x=date, y=value, color=variable,)) + geom_line() + \n  ggtitle(\"Comparison of Normalized Prices\") + ylab(\"Normalized Price\") + xlab(\"Date\")\n\n#-----------------------\nCompFinal[,2] <- reactive({\n  (CompFinal[,2]/CompFinal[1,2])*100\n  \n})\n\nCompFinal[,3] <- reactive({\n  (CompFinal[,3]/CompFinal[1,3])*100\n  \n})\n\nCompFinal[,4] <- reactive({\n  (CompFinal[,4]/CompFinal[1,4])*100\n  \n})\n\n\n\n#-----------------------\nComp1 <-  reactive({\n  data.frame(date = index(dataInput1()), dataInput1(), row.names=NULL)[,c(1,7)]\n})\n\nComp2 <-  reactive({\n  data.frame(date = index(dataInput2()), dataInput2(), row.names=NULL)[,c(1,7)]\n})\n\nComp3 <-  reactive({\n  data.frame(date = index(dataInput3()), dataInput3(), row.names=NULL)[,c(1,7)]  \n})\n\nCompFinal <-  reactive({\n  merge(merge(Comp1, Comp2, by=1), Comp3, by=1)  \n})\n\nCompFinal <-  reactive({\n  melt(CompFinal, id.vars=\"date\")\n})\n",
    "created" : 1411125977887.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "2235494094",
    "id" : "479DF4C8",
    "lastKnownWriteTime" : 0,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}